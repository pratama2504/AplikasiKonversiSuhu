
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author USER
 */
public class KonversiSuhuFrame extends javax.swing.JFrame {

    /**
     * Creates new form KonversiSuhuFrame
     */
    public KonversiSuhuFrame() {
        initComponents();

        // Tambahkan ButtonGroup untuk menyatukan JRadioButton
        ButtonGroup group = new ButtonGroup();
        group.add(rbCelcius);
        group.add(rbFahrenheit);
        group.add(rbReamur);
        group.add(rbKelvin);

// Tambahkan ItemListener untuk setiap JRadioButton
        rbCelcius.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                    // Arah konversi ke Celcius dipilih
                    System.out.println("Konversi ke Celcius dipilih");
                }
            }
        });

        rbFahrenheit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                    // Arah konversi ke Fahrenheit dipilih
                    System.out.println("Konversi ke Fahrenheit dipilih");
                }
            }
        });

        rbReamur.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                    // Arah konversi ke Reamur dipilih
                    System.out.println("Konversi ke Reamur dipilih");
                }
            }
        });

        rbKelvin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
                    // Arah konversi ke Kelvin dipilih
                    System.out.println("Konversi ke Kelvin dipilih");
                }
            }
        });

        txtNilaiSuhu.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                prosesKonversiOtomatis();
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                prosesKonversiOtomatis();
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                // Tidak diperlukan untuk plain text field
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNilaiSuhu = new javax.swing.JTextField();
        cmbSatuanSuhu = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        rbCelcius = new javax.swing.JRadioButton();
        rbFahrenheit = new javax.swing.JRadioButton();
        rbReamur = new javax.swing.JRadioButton();
        rbKelvin = new javax.swing.JRadioButton();
        txtHasil = new javax.swing.JTextField();
        btnHitung = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nilai Suhu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Satuan Suhu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Satuan Konversi");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Hasil");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel4, gridBagConstraints);

        txtNilaiSuhu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNilaiSuhuKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(txtNilaiSuhu, gridBagConstraints);

        cmbSatuanSuhu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celcius", "Fahrenheit", "Reamur", "Kelvin" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(cmbSatuanSuhu, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridLayout(2, 2));

        rbCelcius.setSelected(true);
        rbCelcius.setText("Celcius");
        jPanel2.add(rbCelcius);

        rbFahrenheit.setText("Fahrenheit");
        jPanel2.add(rbFahrenheit);

        rbReamur.setText("Reamur");
        jPanel2.add(rbReamur);

        rbKelvin.setText("Kelvin");
        jPanel2.add(rbKelvin);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jPanel2, gridBagConstraints);

        txtHasil.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(txtHasil, gridBagConstraints);

        btnHitung.setText("Hitung");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        jPanel1.add(btnHitung, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        prosesKonversi();        // TODO add your handling code here:
    }//GEN-LAST:event_btnHitungActionPerformed

    private void txtNilaiSuhuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNilaiSuhuKeyTyped
        char c = evt.getKeyChar();

        // Izinkan angka, titik desimal, dan tanda negatif
        if (!Character.isDigit(c) && c != '.' && c != '-') {
            evt.consume(); // Blokir input yang bukan angka, titik, atau tanda negatif
        }

        // Cegah lebih dari satu tanda negatif atau titik desimal
        String text = txtNilaiSuhu.getText();
        if ((c == '.' && text.contains(".")) || (c == '-' && text.length() > 0)) {
            evt.consume(); // Blokir jika ada lebih dari satu titik atau tanda negatif bukan di awal
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNilaiSuhuKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonversiSuhuFrame().setVisible(true);
            }
        });
    }

    private void prosesKonversiOtomatis() {
        try {
            // Ambil input suhu
            String inputNilaiSuhu = txtNilaiSuhu.getText();
            if (inputNilaiSuhu.isEmpty()) {
                txtHasil.setText(""); // Kosongkan hasil jika input kosong
                return;
            }

            // Validasi apakah input berupa angka
            double nilaiSuhu;
            try {
                nilaiSuhu = Double.parseDouble(inputNilaiSuhu);
            } catch (NumberFormatException e) {
                txtHasil.setText("Input tidak valid!");
                return;
            }

            // Ambil satuan asal dan tujuan
            String satuanAsal = cmbSatuanSuhu.getSelectedItem().toString();
            String satuanTujuan = "";
            if (rbCelcius.isSelected()) {
                satuanTujuan = "Celcius";
            } else if (rbFahrenheit.isSelected()) {
                satuanTujuan = "Fahrenheit";
            } else if (rbReamur.isSelected()) {
                satuanTujuan = "Reamur";
            } else if (rbKelvin.isSelected()) {
                satuanTujuan = "Kelvin";
            }

            // Hitung hasil konversi
            double hasilKonversi = konversiSuhu(nilaiSuhu, satuanAsal, satuanTujuan);

            // Tampilkan hasil di txtHasil
            txtHasil.setText(String.format("%.2f", hasilKonversi));

        } catch (Exception e) {
            txtHasil.setText("Error: " + e.getMessage());
        }
    }

    private double konversiSuhu(double nilaiSuhu, String satuanAsal, String satuanTujuan) {
        double hasil = 0;

        // Konversi ke Celcius terlebih dahulu
        double suhuDalamCelcius;
        switch (satuanAsal) {
            case "Fahrenheit":
                suhuDalamCelcius = (nilaiSuhu - 32) * 5 / 9;
                break;
            case "Reamur":
                suhuDalamCelcius = nilaiSuhu * 5 / 4;
                break;
            case "Kelvin":
                suhuDalamCelcius = nilaiSuhu - 273.15;
                break;
            default: // "Celcius"
                suhuDalamCelcius = nilaiSuhu;
        }

        // Konversi dari Celcius ke satuan tujuan
        switch (satuanTujuan) {
            case "Fahrenheit":
                hasil = suhuDalamCelcius * 9 / 5 + 32;
                break;
            case "Reamur":
                hasil = suhuDalamCelcius * 4 / 5;
                break;
            case "Kelvin":
                hasil = suhuDalamCelcius + 273.15;
                break;
            default: // "Celcius"
                hasil = suhuDalamCelcius;
        }

        return hasil;
    }

    private void prosesKonversi() {
        try {
            // Ambil input suhu
            String inputNilaiSuhu = txtNilaiSuhu.getText();
            if (inputNilaiSuhu.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Masukkan nilai suhu terlebih dahulu!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validasi apakah input berupa angka
            double nilaiSuhu;
            try {
                nilaiSuhu = Double.parseDouble(inputNilaiSuhu);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Masukkan nilai suhu yang valid (angka)!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Ambil satuan asal dan tujuan
            String satuanAsal = cmbSatuanSuhu.getSelectedItem().toString();
            String satuanTujuan = "";
            if (rbCelcius.isSelected()) {
                satuanTujuan = "Celcius";
            } else if (rbFahrenheit.isSelected()) {
                satuanTujuan = "Fahrenheit";
            } else if (rbReamur.isSelected()) {
                satuanTujuan = "Reamur";
            } else if (rbKelvin.isSelected()) {
                satuanTujuan = "Kelvin";
            }

            // Hitung hasil konversi
            double hasilKonversi = konversiSuhu(nilaiSuhu, satuanAsal, satuanTujuan);

            // Tampilkan hasil di txtHasil
            txtHasil.setText(String.format("%.2f", hasilKonversi));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHitung;
    private javax.swing.JComboBox<String> cmbSatuanSuhu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton rbCelcius;
    private javax.swing.JRadioButton rbFahrenheit;
    private javax.swing.JRadioButton rbKelvin;
    private javax.swing.JRadioButton rbReamur;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JTextField txtNilaiSuhu;
    // End of variables declaration//GEN-END:variables
}
